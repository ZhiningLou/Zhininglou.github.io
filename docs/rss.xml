<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Blog Title</title><link>https://Zhininglou.github.io</link><description>Blog description</description><copyright>Blog Title</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://Zhininglou.github.io</link></image><lastBuildDate>Sun, 08 Dec 2024 23:57:17 +0000</lastBuildDate><managingEditor>Blog Title</managingEditor><ttl>60</ttl><webMaster>Blog Title</webMaster><item><title>1</title><link>https://Zhininglou.github.io/post/1.html</link><description>#1.基础算法&#13;
##1.1 Greedy Algorithm 贪心算法&#13;
###1.1.1 Core idea of Greedy Algorithm 贪心算法的基本思想&#13;
####1.1.1.1 Local optimal choice 局部最优选择&#13;
&#13;
在问题的每个阶段，选择当前最优的解，即认为当前选择会对全局最优解有帮助&#13;
&#13;
At each stage, pick the best current option, assuming it contributes to the golabl optimum&#13;
&#13;
####1.1.1.2 No backtracking 不可退回&#13;
&#13;
一旦选择了某个选择，就不能改变之前的决策&#13;
&#13;
Once a choice is made, it cannot be undone&#13;
&#13;
####1.1.1.3 Final Goal 最终目标&#13;
&#13;
通过局部最优解的积累，得到全局最优解&#13;
&#13;
Accumulate local optimal solutions to achieve a global optimum&#13;
### 1.1.2 Conditions for applying greedy algorithm&#13;
#### 1.1.2.1 Optimal substructure&#13;
#### 1.1.2.2 Greedy choice property&#13;
###1.1.3 Steps in Greedy Algorithm&#13;
####1.1.3.1 Define the greedy rule&#13;
####1.1.3.2 Prove the strategy&#13;
####1.1.3.3 Implement the algorithm&#13;
###1.1.4 Advantages and disadvantage of Greedy Algorithm&#13;
####1.1.4.1 Adv&#13;
##1.2 二分&#13;
##1.3 模拟&#13;
#2.基础数据结构&#13;
##2.1 数组与字符串处理&#13;
##2.2 堆栈与队列&#13;
##2.3 哈希表与集合&#13;
##2.4 优先队列&#13;
#3.图论&#13;
##3.1 图的表示与存储&#13;
##3.2 搜索算法&#13;
###3.2.1 深度优先搜索&#13;
###3.2.2 广度优先算法&#13;
##3.3 最短路径算法&#13;
##3.4 最小生成树&#13;
##拓扑算法&#13;
##连通性算法&#13;
#4.动态规划&#13;
##4.1 基础动态规划&#13;
##4.2 状态压缩动规&#13;
##4.3 数位动态规划&#13;
##4.4 树状动态规划&#13;
#5.数论&#13;
##5.1 快速幂算法&#13;
##5.2 &#13;
。</description><guid isPermaLink="true">https://Zhininglou.github.io/post/1.html</guid><pubDate>Sun, 08 Dec 2024 23:56:51 +0000</pubDate></item></channel></rss>